@using Microsoft.AspNetCore.Identity
@using EcommerceApp.Domain.Models;
@using Microsoft.AspNetCore.Authorization
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IAuthorizationService AuthorizationService
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (AuthorizationService.AuthorizeAsync(User, "EmployeePanelEntry").Result.Succeeded)
        {
            <li class="nav-item">
                <div class="nav-link"><i class="fas fa-user fa-lg"></i> Hello @User.Identity.Name!</div>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fas fa-user fa-lg"></i> Hello
                    @User.Identity.Name!</a>
            </li>

        }
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
            asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link"><i class="fas fa-sign-out-alt fa-lg"></i> Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus fa-lg"></i> Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt fa-lg"></i> Login</a>
        </li>
    }
</ul>
